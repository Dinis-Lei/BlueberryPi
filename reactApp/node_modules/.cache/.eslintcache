[{"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/index.js":"1","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/App.js":"2","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/reportWebVitals.js":"3","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/canvasjs.react.js":"4","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/Graph.js":"5","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/MyNavbar.js":"6","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/LocationInfo.js":"7","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/SideAlerts.js":"8","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/CircularGraph.js":"9","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/MyAccordion.js":"10","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/canvasjs.min.js":"11","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/DailyInfo.js":"12","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/SoloGraphPage.js":"13","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/AlertHistory.js":"14"},{"size":790,"mtime":1642879025828,"results":"15","hashOfConfig":"16"},{"size":9401,"mtime":1642889537434,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1642879025828,"results":"18","hashOfConfig":"16"},{"size":2080,"mtime":1642879025828,"results":"19","hashOfConfig":"16"},{"size":3871,"mtime":1642885855361,"results":"20","hashOfConfig":"16"},{"size":1701,"mtime":1642879025828,"results":"21","hashOfConfig":"16"},{"size":1205,"mtime":1642879025828,"results":"22","hashOfConfig":"16"},{"size":4166,"mtime":1642879025828,"results":"23","hashOfConfig":"16"},{"size":1447,"mtime":1642879025828,"results":"24","hashOfConfig":"16"},{"size":4127,"mtime":1642880991823,"results":"25","hashOfConfig":"16"},{"size":483638,"mtime":1642879025828,"results":"26","hashOfConfig":"16"},{"size":2091,"mtime":1642887353614,"results":"27","hashOfConfig":"16"},{"size":3877,"mtime":1642888679025,"results":"28","hashOfConfig":"16"},{"size":1848,"mtime":1642890128889,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"sxkwz3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/index.js",[],["65","66"],"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/App.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/reportWebVitals.js",[],"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/canvasjs.react.js",["82"],"﻿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2021 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/Graph.js",["83","84"],"import React, { useEffect, useState } from \"react\";\nimport CanvasJSReact from '../canvasjs.react';\nimport { fetchData, processString } from \"../App\";\nimport { useParams } from \"react-router-dom\"\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst units = {\n    \"Plantation temperature\": \"ºC\",\n    \"Net harvest\": \"kg\",\n    \"Soil ph\": \"pH\",\n    \"Soil water tension\": \"cb\",\n    \"Unit loss\": \"%\",\n    \"Storage temperature\": \"ºC\",\n    \"Storage humidity\": \"%\"\n}\n\nconst process_date = (timestamp) => {\n    let date = new Date(timestamp * 1000);\n    let date_str = date.getDate()+\n        \"/\"+(date.getMonth()+1)+\n        \"/\"+date.getFullYear()+\n        \" \"+date.getHours()+\n        \":\"+date.getMinutes()+\n        \":\"+date.getSeconds();\n    return date_str;\n}\n\nexport const getDataPoints = (JSONData) => {\n    let ret = [];\n    let counter = 1;\n    let graphData;\n\n    if (JSONData.length < 10) {\n        graphData = JSONData;\n    }\n    else {\n        let firstElem = 0; \n        let lastElem = 10;\n        graphData = JSONData.slice(firstElem, lastElem); // não inclui lastElem\n    }\n    graphData.reverse()\n    for (const dataPoint of graphData) {\n        let newElem = {x: counter, y: dataPoint[\"data\"], label: process_date(dataPoint[\"timestamp\"])};\n        ret.push(newElem);\n        counter += 1;\n    }\n\n    return ret;\n}\n\n// const getTimes = (JSONData) => {\n//     let ret = [];\n//     let graphData;\n\n//     if (JSONData.length < 20) {\n//         graphData = JSONData;\n//     }\n//     else {\n//         let firstElem = JSONData.length - 10; \n//         let lastElem = JSONData.length;\n//         graphData = JSONData.slice(firstElem, lastElem); // não inclui lastElem\n//     }\n\n//     for (const dataPoint of graphData) {\n//         let timestamp = dataPoint[\"timestamp\"];\n//         let date = new Date(timestamp * 1000);\n//         let date_str = date.getDate()+\n//             \"/\"+(date.getMonth()+1)+\n//             \"/\"+date.getFullYear()+\n//             \" \"+date.getHours()+\n//             \":\"+date.getMinutes()+\n//             \":\"+date.getSeconds();\n//         ret.push(date_str);\n//     }\n\n//     return ret;\n// }\n\nconst Graph = props =>{\n\n    const [myDataPoints, setMyDataPoints] = useState([]);\n    const [graphTitle, setGraphTitle] = useState(\"[no title]\");\n    const { location } = useParams()\n    const [flg, setFlg] = useState(true);\n    // const [times, setTimes] = useState([]);\n\n    useEffect(() => {\n        //while(true){\n           setInterval(\n            () => {\n                //console.log(flg)\n                setFlg(!flg)\n            }, 60000) \n        //} \n        \n    })\n\n    useEffect(() => {\n        //console.log(\"AAA\")\n        let dataType = props.dataType;\n        let url = location + \"/\" + dataType;\n        \n        let plantation_temperature_data = fetchData(url); // data is a promise object\n        plantation_temperature_data.then(function (result) {\n            setMyDataPoints(getDataPoints(result));\n            //console.log(`${dataType}`)\n            //console.log(myDataPoints)\n            setGraphTitle(processString(dataType));\n            // setTimes(getTimes(result));\n        });\n\n    }, [flg]);\n\n    const options = {\n        animationEnabled: true,\n        width: 450,\n        theme: \"light2\",\n        title:{\n            text: graphTitle\n        },\n        axisY: {\n            title: graphTitle,\n            suffix: units[graphTitle]\n        },\n        axisX: {\n            title: \"Time\",\n            //prefix: \"W\",\n            interval: 2\n        },\n        data: [{\n            type: \"spline\",\n            indexLabel: \"{x}: {y}\",\n            // toolTipContent: \"Week {x}: {y}%\",\n            dataPoints: myDataPoints\n        }]\n    }\n\n    return (\t\t\t\n    <CanvasJSChart options = {options} \n        //onRef={ref => this.chart = ref}\n    />)\n\n}\n\nexport default Graph;","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/MyNavbar.js",[],"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/LocationInfo.js",["85","86","87","88"],"import React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport Alert from 'react-bootstrap/Alert'\n\nconst LocationInfo = () => {\n\n    var today = new Date();\n\n    var day = today.getDate().toString().length==1 ? (\"0\" + today.getDate()) : today.getDate();\n    var month = (today.getMonth()+1).toString().length==1 ? (\"0\" + (today.getMonth()+1)) : (today.getMonth()+1);\n    var date = day + '/' + month + '/' + today.getFullYear();\n\n    var Hs = today.getHours().toString().length==1 ? (\"0\" + today.getHours()) : today.getHours();\n    var Ms = today.getMinutes().toString().length==1 ? (\"0\" + today.getMinutes()) : today.getMinutes();\n    var hours = Hs + ':' + Ms\n\n    const { location } = useParams()\n\n    return (\n\n        <Alert variant=\"light\" style={{ width: '300px' }}>\n            <Alert.Heading style={{ color: 'black' }}>Current information</Alert.Heading>\n            <p>\n                {location}\n            </p>\n            <hr />\n            <p className=\"mb-0\">\n                <strong>Date:</strong> {date}\n            </p>\n            <p className=\"mb-0\">\n                <strong>Time:</strong> {hours}\n            </p>\n        </Alert>\n    )\n}\n\nexport default LocationInfo;","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/SideAlerts.js",["89"],"import React, { useEffect, useState } from \"react\"\nimport Toast from 'react-bootstrap/Toast'\nimport ToastContainer from 'react-bootstrap/ToastContainer'\nimport { fetchData, processString } from \"../App\"\n\nconst getAlerts = (JSONData) => {\n\n    let ret = {}\n  \n    for (let elem in JSONData) {\n        \n        let alert = JSONData[elem];\n\n        let location = alert[\"location\"];\n\n        let sensor = processString(alert[\"sensor\"]);\n        let val = alert[\"val\"];\n\n        let start = alert[\"start\"];\n        let start_Date = new Date(start * 1000);\n        let start_date = start_Date.getDate()+\n            \"/\"+(start_Date.getMonth()+1)+\n            \"/\"+start_Date.getFullYear()+\n            \" \"+start_Date.getHours()+\n            \":\"+start_Date.getMinutes()+\n            \":\"+start_Date.getSeconds();\n\n        let end = alert[\"end\"];\n        let end_Date = new Date(end * 1000);\n        let end_date = end_Date.getDate()+\n            \"/\"+(end_Date.getMonth()+1)+\n            \"/\"+end_Date.getFullYear()+\n            \" \"+end_Date.getHours()+\n            \":\"+end_Date.getMinutes()+\n            \":\"+end_Date.getSeconds();\n\n        let alert_str = sensor + \": \" + val + \", since: \" + start_date + \", until: \" + end_date;\n  \n        if (ret[location] != undefined) {\n            ret[location] = ret[location].concat([alert_str]);\n        }\n        else {\n            ret[location] = [alert_str];\n        }\n  \n    }\n    console.log(ret)\n    return ret;\n  \n}\n\nconst getLocations = (JSONData) => {\n    let ret = [];\n    for (let elem in JSONData) {\n        let alert = JSONData[elem];\n        let loc = alert[\"location\"];\n        if (!ret.includes(loc)){\n            ret.push(loc);\n        }\n    }\n    return ret;\n}\n\nconst SideAlerts = props => {\n\n    const [show, setShow] = React.useState(true);\n    const toggleShow = () => setShow(!show);\n    const [alerts_dict, setAlertsDict] = useState({});\n    const [locations_lst, setLocationsLst] = useState([]);\n\n    /* alerts_dict = {\n        location1: [\n        [\n            sensor1: ...,\n            val1: ...,\n            start1: ...,\n            end1: ...,\n        ],\n        [\n            sensor2: ...,\n            val2: ...,\n            start2: ...,\n            end2: ...,\n        ],\n        [...],\n        [...],\n        ...\n        ],\n        location2: [...],\n        location3: [...],\n        ...\n    } */\n\n    useEffect(() => {\n\n        let alerts_data = fetchData(\"alerts\");\n        alerts_data.then(function(result){\n            setAlertsDict(getAlerts(result));\n            setLocationsLst(getLocations(result));\n        });\n\n    }, []);\n\n    if (!props.alerts) {\n        return (<div></div>);\n    }\n\n    return (\n        <div\n            aria-live=\"polite\"\n            aria-atomic=\"true\"\n            className=\"position-relative\"\n            style={{ minHeight: '240px' }}\n            >\n\n            <ToastContainer style={{ paddingTop: '10%', paddingLeft: '10%' }}>\n                <Toast show={show} onClose={toggleShow} style={{ width: '75%' }}>\n                    <Toast.Header>\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n                        <strong className=\"me-auto\">ALERT</strong>\n                        <small className=\"text-muted\">just now</small>\n                    </Toast.Header>\n                    <Toast.Body>\n                    {\n                        locations_lst.map(\n                            (location) => {\n                                return(\n                                    alerts_dict[location].map(\n                                        (alert) => {\n                                            console.log(alert)\n                                            return(\n                                                <p>{alert}</p>\n                                            )\n                                        }\n                                    )\n                                )\n                            }\n                        )\n                    }\n                    </Toast.Body>\n                </Toast>\n            </ToastContainer>\n        </div>\n    );\n\n}\n\nexport default SideAlerts;","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/CircularGraph.js",["90","91"],"import React, { useEffect, useState } from \"react\";\nimport CanvasJSReact from '../canvasjs.react';\nimport { fetchData, processString } from \"../App\";\nimport { useParams } from \"react-router-dom\"\nimport { getDataPoints } from \"./Graph\";\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst CircularGraph = props =>{\n\n    const [myDataPoints, setMyDataPoints] = useState([]);\n    const [graphTitle, setGraphTitle] = useState(\"[no title]\");\n    const { location } = useParams()\n\n    useEffect(() => {\n\n        let dataType = props.dataType;\n        let url = location + \"/\" + dataType;\n        \n        let plantation_temperature_data = fetchData(url); // data is a promise object\n        plantation_temperature_data.then(function (result) {\n            setMyDataPoints(getDataPoints(result));\n            setGraphTitle(processString(dataType));\n        });\n\n    }, []);\n\n    const options = {\n        animationEnabled: true,\n        width: 450,\n        theme: \"light2\",\n        title: {\n            text: graphTitle\n        },\n        data: [{\n            type: \"doughnut\",\n            showInLegend: true,\n            indexLabel: \"{name}: {y}\",\n            yValueFormatString: \"#,###'%'\",\n            dataPoints: myDataPoints\n        }],\n    }\n\n    return (\t\t\t\n    <CanvasJSChart options = {options} style={{width: \"25%\"}}\n        //onRef={ref => this.chart = ref}\n    />)\n\n}\n\nexport default CircularGraph;","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/MyAccordion.js",[],"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/canvasjs.min.js",[],"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/DailyInfo.js",["92","93","94","95"],"import React, { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { fetchData, processString } from \"../App\";\n\nconst getLatestDataPoint = (JSONData, location_name, units) => {\n\n    let div = 1;\n\n    while (div != null) {\n        if (JSONData.length != 0) {\n\n            let inner_counter = JSONData.length - 1; // start by latest info (the most recent)\n            let found_info = false;\n\n            while (inner_counter!=-1) {\n                const new_info = JSONData[inner_counter];\n                console.log(\"NEW INFO LOCATION: \" + new_info[\"location\"]);\n                console.log(\"LOCATION NAME: \" + location_name);\n                if (new_info[\"location\"]==location_name) { // check for correct \n                    found_info = true;\n                    return (new_info[\"data\"] + \" \" + units)\n                }\n                inner_counter -= 1;\n            }\n            if (!found_info) {\n                return \"no available information\"\n            }\n        }\n        else {\n            return \"no available information\"\n        }\n\n    }\n\n}\n\nconst DailyInfo = props => {\n\n    const title = processString(props.dataType)\n    const [value, setValue] = useState(\"no information available\");\n\n    const aStyle = {\n        'text-decoration': 'none'\n      };\n\n    useEffect(() => {\n        \n        let data = fetchData(props.location + \"/\" + props.dataType); // data is a promise object\n        data.then(function (result) {\n            console.log(\"PROPS LOCATION: \" + props.location);\n            setValue(getLatestDataPoint(result, props.location, props.units));\n        });\n\n    }, []);\n\n    return(\n        <a style={aStyle} href={\"/dashboard/\"+props.location+\"/\"+props.dataType}>\n           <Card>\n            <Card.Header>{title}</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item>{value}</ListGroup.Item>\n            </ListGroup>\n            </Card> \n        </a>\n    )\n\n}\n\nexport default DailyInfo;","/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/SoloGraphPage.js",["96","97"],"/home/dinis-lei/Desktop/IES_98452/BlueberryPi/reactApp/src/components/AlertHistory.js",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":3,"column":17,"nodeType":"106","messageId":"107","endLine":3,"endColumn":26},{"ruleId":"104","severity":1,"message":"109","line":4,"column":25,"nodeType":"106","messageId":"107","endLine":4,"endColumn":29},{"ruleId":"104","severity":1,"message":"110","line":4,"column":31,"nodeType":"106","messageId":"107","endLine":4,"endColumn":40},{"ruleId":"104","severity":1,"message":"111","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":19},{"ruleId":"104","severity":1,"message":"112","line":14,"column":8,"nodeType":"106","messageId":"107","endLine":14,"endColumn":21},{"ruleId":"104","severity":1,"message":"113","line":19,"column":10,"nodeType":"106","messageId":"107","endLine":19,"endColumn":22},{"ruleId":"104","severity":1,"message":"114","line":22,"column":5,"nodeType":"106","messageId":"107","endLine":22,"endColumn":13},{"ruleId":"104","severity":1,"message":"115","line":23,"column":5,"nodeType":"106","messageId":"107","endLine":23,"endColumn":18},{"ruleId":"104","severity":1,"message":"116","line":42,"column":10,"nodeType":"106","messageId":"107","endLine":42,"endColumn":17},{"ruleId":"104","severity":1,"message":"117","line":42,"column":19,"nodeType":"106","messageId":"107","endLine":42,"endColumn":29},{"ruleId":"118","severity":1,"message":"119","line":57,"column":25,"nodeType":"120","messageId":"121","endLine":57,"endColumn":27},{"ruleId":"118","severity":1,"message":"122","line":155,"column":55,"nodeType":"120","messageId":"121","endLine":155,"endColumn":57},{"ruleId":"118","severity":1,"message":"122","line":171,"column":28,"nodeType":"120","messageId":"121","endLine":171,"endColumn":30},{"ruleId":"118","severity":1,"message":"122","line":196,"column":29,"nodeType":"120","messageId":"121","endLine":196,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":1,"column":1,"nodeType":"125","messageId":"121","fix":"126"},{"ruleId":"104","severity":1,"message":"114","line":6,"column":5,"nodeType":"106","messageId":"107","endLine":6,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":114,"column":8,"nodeType":"129","endLine":114,"endColumn":13,"suggestions":"130"},{"ruleId":"118","severity":1,"message":"122","line":9,"column":48,"nodeType":"120","messageId":"121","endLine":9,"endColumn":50},{"ruleId":"118","severity":1,"message":"122","line":10,"column":55,"nodeType":"120","messageId":"121","endLine":10,"endColumn":57},{"ruleId":"118","severity":1,"message":"122","line":13,"column":48,"nodeType":"120","messageId":"121","endLine":13,"endColumn":50},{"ruleId":"118","severity":1,"message":"122","line":14,"column":50,"nodeType":"120","messageId":"121","endLine":14,"endColumn":52},{"ruleId":"118","severity":1,"message":"119","line":39,"column":27,"nodeType":"120","messageId":"121","endLine":39,"endColumn":29},{"ruleId":"104","severity":1,"message":"114","line":7,"column":5,"nodeType":"106","messageId":"107","endLine":7,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":27,"column":8,"nodeType":"129","endLine":27,"endColumn":10,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"119","line":12,"column":29,"nodeType":"120","messageId":"121","endLine":12,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":17,"column":33,"nodeType":"120","messageId":"121","endLine":17,"endColumn":35},{"ruleId":"118","severity":1,"message":"122","line":21,"column":41,"nodeType":"120","messageId":"121","endLine":21,"endColumn":43},{"ruleId":"127","severity":1,"message":"132","line":56,"column":8,"nodeType":"129","endLine":56,"endColumn":10,"suggestions":"133"},{"ruleId":"104","severity":1,"message":"114","line":6,"column":5,"nodeType":"106","messageId":"107","endLine":6,"endColumn":13},{"ruleId":"127","severity":1,"message":"134","line":116,"column":8,"nodeType":"129","endLine":116,"endColumn":13,"suggestions":"135"},{"ruleId":"104","severity":1,"message":"136","line":4,"column":21,"nodeType":"106","messageId":"107","endLine":4,"endColumn":34},{"ruleId":"127","severity":1,"message":"134","line":28,"column":8,"nodeType":"129","endLine":28,"endColumn":10,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'Container' is defined but never used.","'CircularGraph' is defined but never used.","'getLocations' is defined but never used.","'CanvasJS' is assigned a value but never used.","'CanvasJSChart' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"140","text":"141"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location' and 'props.dataType'. Either include them or remove the dependency array.","ArrayExpression",["142"],["143"],"React Hook useEffect has missing dependencies: 'props.dataType', 'props.location', and 'props.units'. Either include them or remove the dependency array. If 'setValue' needs the current value of 'props.location', you can also switch to useReducer instead of useState and read 'props.location' in the reducer.",["144"],"React Hook useEffect has missing dependencies: 'location' and 'sensor'. Either include them or remove the dependency array.",["145"],"'processString' is defined but never used.",["146"],"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [flg, location, props.dataType]",{"range":"157","text":"158"},"Update the dependencies array to be: [location, props.dataType]",{"range":"159","text":"160"},"Update the dependencies array to be: [props.dataType, props.location, props.units]",{"range":"161","text":"162"},"Update the dependencies array to be: [flg, location, sensor]",{"range":"163","text":"164"},"Update the dependencies array to be: [location, sensor]",{"range":"165","text":"166"},[3184,3189],"[flg, location, props.dataType]",[906,908],"[location, props.dataType]",[1735,1737],"[props.dataType, props.location, props.units]",[3181,3186],"[flg, location, sensor]",[683,685],"[location, sensor]"]