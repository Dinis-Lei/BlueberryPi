[{"/home/isabel/IES/BlueberryPi/reactApp/src/index.js":"1","/home/isabel/IES/BlueberryPi/reactApp/src/reportWebVitals.js":"2","/home/isabel/IES/BlueberryPi/reactApp/src/App.js":"3","/home/isabel/IES/BlueberryPi/reactApp/src/canvasjs.react.js":"4","/home/isabel/IES/BlueberryPi/reactApp/src/components/Graph.js":"5","/home/isabel/IES/BlueberryPi/reactApp/src/components/SideAlerts.js":"6","/home/isabel/IES/BlueberryPi/reactApp/src/components/MyNavbar.js":"7","/home/isabel/IES/BlueberryPi/reactApp/src/components/CircularGraph.js":"8","/home/isabel/IES/BlueberryPi/reactApp/src/components/LocationInfo.js":"9","/home/isabel/IES/BlueberryPi/reactApp/src/components/MyAccordion.js":"10","/home/isabel/IES/BlueberryPi/reactApp/src/canvasjs.min.js":"11","/home/isabel/IES/BlueberryPi/reactApp/src/components/DailyInfo.js":"12"},{"size":790,"mtime":1642006169650,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1642006169650,"results":"15","hashOfConfig":"14"},{"size":8265,"mtime":1642370580077,"results":"16","hashOfConfig":"14"},{"size":2080,"mtime":1642006169650,"results":"17","hashOfConfig":"14"},{"size":3542,"mtime":1642370153518,"results":"18","hashOfConfig":"14"},{"size":4166,"mtime":1642370559957,"results":"19","hashOfConfig":"14"},{"size":1701,"mtime":1642159297202,"results":"20","hashOfConfig":"14"},{"size":1447,"mtime":1642159297198,"results":"21","hashOfConfig":"14"},{"size":1205,"mtime":1642006169650,"results":"22","hashOfConfig":"14"},{"size":3922,"mtime":1642370153518,"results":"23","hashOfConfig":"14"},{"size":483638,"mtime":1642006169650,"results":"24","hashOfConfig":"14"},{"size":1949,"mtime":1642370153518,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r6xhcd",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},"/home/isabel/IES/BlueberryPi/reactApp/src/index.js",[],"/home/isabel/IES/BlueberryPi/reactApp/src/reportWebVitals.js",[],"/home/isabel/IES/BlueberryPi/reactApp/src/App.js",["55","56","57","58","59","60","61","62","63","64"],"/home/isabel/IES/BlueberryPi/reactApp/src/canvasjs.react.js",["65"],"/home/isabel/IES/BlueberryPi/reactApp/src/components/Graph.js",["66","67"],"import React, { useEffect, useState } from \"react\";\nimport CanvasJSReact from '../canvasjs.react';\nimport { fetchData, processString } from \"../App\";\nimport { useParams } from \"react-router-dom\"\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst units = {\n    \"Plantation temperature\": \"ºC\",\n    \"Net harvest\": \"kg\",\n    \"Soil ph\": \"pH\",\n    \"Soil water tension\": \"cb\",\n    \"Unit loss\": \"%\",\n    \"Storage temperature\": \"ºC\",\n    \"Storage humidity\": \"%\"\n}\n\nconst process_date = (timestamp) => {\n    let date = new Date(timestamp * 1000);\n    let date_str = date.getDate()+\n        \"/\"+(date.getMonth()+1)+\n        \"/\"+date.getFullYear()+\n        \" \"+date.getHours()+\n        \":\"+date.getMinutes()+\n        \":\"+date.getSeconds();\n    return date_str;\n}\n\nexport const getDataPoints = (JSONData) => {\n    let ret = [];\n    let counter = 1;\n    let graphData;\n\n    if (JSONData.length < 20) {\n        graphData = JSONData;\n    }\n    else {\n        let firstElem = JSONData.length - 10; \n        let lastElem = JSONData.length;\n        graphData = JSONData.slice(firstElem, lastElem); // não inclui lastElem\n    }\n\n    for (const dataPoint of graphData) {\n        let newElem = {x: counter, y: dataPoint[\"data\"], label: process_date(dataPoint[\"timestamp\"])};\n        ret.push(newElem);\n        counter += 1;\n    }\n\n    return ret;\n}\n\n// const getTimes = (JSONData) => {\n//     let ret = [];\n//     let graphData;\n\n//     if (JSONData.length < 20) {\n//         graphData = JSONData;\n//     }\n//     else {\n//         let firstElem = JSONData.length - 10; \n//         let lastElem = JSONData.length;\n//         graphData = JSONData.slice(firstElem, lastElem); // não inclui lastElem\n//     }\n\n//     for (const dataPoint of graphData) {\n//         let timestamp = dataPoint[\"timestamp\"];\n//         let date = new Date(timestamp * 1000);\n//         let date_str = date.getDate()+\n//             \"/\"+(date.getMonth()+1)+\n//             \"/\"+date.getFullYear()+\n//             \" \"+date.getHours()+\n//             \":\"+date.getMinutes()+\n//             \":\"+date.getSeconds();\n//         ret.push(date_str);\n//     }\n\n//     return ret;\n// }\n\nconst Graph = props =>{\n\n    const [myDataPoints, setMyDataPoints] = useState([]);\n    const [graphTitle, setGraphTitle] = useState(\"[no title]\");\n    const { location } = useParams()\n    // const [times, setTimes] = useState([]);\n\n    useEffect(() => {\n\n        let dataType = props.dataType;\n        let url = location + \"/\" + dataType;\n        \n        let plantation_temperature_data = fetchData(url); // data is a promise object\n        plantation_temperature_data.then(function (result) {\n            setMyDataPoints(getDataPoints(result));\n            setGraphTitle(processString(dataType));\n            // setTimes(getTimes(result));\n        });\n\n    }, []);\n\n    const options = {\n        animationEnabled: true,\n        width: 450,\n        theme: \"light2\",\n        title:{\n            text: graphTitle\n        },\n        axisY: {\n            title: graphTitle,\n            suffix: units[graphTitle]\n        },\n        axisX: {\n            title: \"Time\",\n            //prefix: \"W\",\n            interval: 2\n        },\n        data: [{\n            type: \"spline\",\n            indexLabel: \"{x}: {y}\",\n            // toolTipContent: \"Week {x}: {y}%\",\n            dataPoints: myDataPoints\n        }]\n    }\n\n    return (\t\t\t\n    <CanvasJSChart options = {options} style={{width: \"25%\"}}\n        //onRef={ref => this.chart = ref}\n    />)\n\n}\n\nexport default Graph;",["68","69"],"/home/isabel/IES/BlueberryPi/reactApp/src/components/SideAlerts.js",["70"],"/home/isabel/IES/BlueberryPi/reactApp/src/components/MyNavbar.js",[],"/home/isabel/IES/BlueberryPi/reactApp/src/components/CircularGraph.js",["71","72"],"import React, { useEffect, useState } from \"react\";\nimport CanvasJSReact from '../canvasjs.react';\nimport { fetchData, processString } from \"../App\";\nimport { useParams } from \"react-router-dom\"\nimport { getDataPoints } from \"./Graph\";\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nconst CircularGraph = props =>{\n\n    const [myDataPoints, setMyDataPoints] = useState([]);\n    const [graphTitle, setGraphTitle] = useState(\"[no title]\");\n    const { location } = useParams()\n\n    useEffect(() => {\n\n        let dataType = props.dataType;\n        let url = location + \"/\" + dataType;\n        \n        let plantation_temperature_data = fetchData(url); // data is a promise object\n        plantation_temperature_data.then(function (result) {\n            setMyDataPoints(getDataPoints(result));\n            setGraphTitle(processString(dataType));\n        });\n\n    }, []);\n\n    const options = {\n        animationEnabled: true,\n        width: 450,\n        theme: \"light2\",\n        title: {\n            text: graphTitle\n        },\n        data: [{\n            type: \"doughnut\",\n            showInLegend: true,\n            indexLabel: \"{name}: {y}\",\n            yValueFormatString: \"#,###'%'\",\n            dataPoints: myDataPoints\n        }],\n    }\n\n    return (\t\t\t\n    <CanvasJSChart options = {options} style={{width: \"25%\"}}\n        //onRef={ref => this.chart = ref}\n    />)\n\n}\n\nexport default CircularGraph;","/home/isabel/IES/BlueberryPi/reactApp/src/components/LocationInfo.js",["73","74","75","76"],"import React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport Alert from 'react-bootstrap/Alert'\n\nconst LocationInfo = () => {\n\n    var today = new Date();\n\n    var day = today.getDate().toString().length==1 ? (\"0\" + today.getDate()) : today.getDate();\n    var month = (today.getMonth()+1).toString().length==1 ? (\"0\" + (today.getMonth()+1)) : (today.getMonth()+1);\n    var date = day + '/' + month + '/' + today.getFullYear();\n\n    var Hs = today.getHours().toString().length==1 ? (\"0\" + today.getHours()) : today.getHours();\n    var Ms = today.getMinutes().toString().length==1 ? (\"0\" + today.getMinutes()) : today.getMinutes();\n    var hours = Hs + ':' + Ms\n\n    const { location } = useParams()\n\n    return (\n\n        <Alert variant=\"light\" style={{ width: '300px' }}>\n            <Alert.Heading style={{ color: 'black' }}>Current information</Alert.Heading>\n            <p>\n                {location}\n            </p>\n            <hr />\n            <p className=\"mb-0\">\n                <strong>Date:</strong> {date}\n            </p>\n            <p className=\"mb-0\">\n                <strong>Time:</strong> {hours}\n            </p>\n        </Alert>\n    )\n}\n\nexport default LocationInfo;","/home/isabel/IES/BlueberryPi/reactApp/src/components/MyAccordion.js",[],"/home/isabel/IES/BlueberryPi/reactApp/src/canvasjs.min.js",[],"/home/isabel/IES/BlueberryPi/reactApp/src/components/DailyInfo.js",["77","78","79","80"],"import React, { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { fetchData, processString } from \"../App\";\n\nconst getLatestDataPoint = (JSONData, location_name, units) => {\n\n    let div = 1;\n\n    while (div != null) {\n        if (JSONData.length != 0) {\n\n            let inner_counter = JSONData.length - 1; // start by latest info (the most recent)\n            let found_info = false;\n\n            while (inner_counter!=-1) {\n                const new_info = JSONData[inner_counter];\n                console.log(\"NEW INFO LOCATION: \" + new_info[\"location\"]);\n                console.log(\"LOCATION NAME: \" + location_name);\n                if (new_info[\"location\"]==location_name) { // check for correct \n                    found_info = true;\n                    return (new_info[\"data\"] + \" \" + units)\n                }\n                inner_counter -= 1;\n            }\n            if (!found_info) {\n                return \"no available information\"\n            }\n        }\n        else {\n            return \"no available information\"\n        }\n\n    }\n\n}\n\nconst DailyInfo = props => {\n\n    const title = processString(props.dataType)\n    const [value, setValue] = useState(\"no information available\");\n\n    useEffect(() => {\n        \n        let data = fetchData(props.location + \"/\" + props.dataType); // data is a promise object\n        data.then(function (result) {\n            console.log(\"PROPS LOCATION: \" + props.location);\n            setValue(getLatestDataPoint(result, props.location, props.units));\n        });\n\n    }, []);\n\n    return(\n        <Card style={{ width: 'auto' }}>\n            <Card.Header>{title}</Card.Header>\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item>{value}</ListGroup.Item>\n            </ListGroup>\n        </Card>\n    )\n\n}\n\nexport default DailyInfo;",{"ruleId":"81","severity":1,"message":"82","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},{"ruleId":"81","severity":1,"message":"85","line":3,"column":17,"nodeType":"83","messageId":"84","endLine":3,"endColumn":26},{"ruleId":"81","severity":1,"message":"86","line":4,"column":25,"nodeType":"83","messageId":"84","endLine":4,"endColumn":29},{"ruleId":"81","severity":1,"message":"87","line":18,"column":10,"nodeType":"83","messageId":"84","endLine":18,"endColumn":22},{"ruleId":"81","severity":1,"message":"88","line":20,"column":5,"nodeType":"83","messageId":"84","endLine":20,"endColumn":13},{"ruleId":"81","severity":1,"message":"89","line":21,"column":5,"nodeType":"83","messageId":"84","endLine":21,"endColumn":18},{"ruleId":"81","severity":1,"message":"90","line":40,"column":10,"nodeType":"83","messageId":"84","endLine":40,"endColumn":17},{"ruleId":"81","severity":1,"message":"91","line":40,"column":19,"nodeType":"83","messageId":"84","endLine":40,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":53,"column":25,"nodeType":"94","messageId":"95","endLine":53,"endColumn":27},{"ruleId":"92","severity":1,"message":"96","line":150,"column":53,"nodeType":"94","messageId":"95","endLine":150,"endColumn":55},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","messageId":"95","fix":"100"},{"ruleId":"81","severity":1,"message":"88","line":6,"column":5,"nodeType":"83","messageId":"84","endLine":6,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":100,"column":8,"nodeType":"103","endLine":100,"endColumn":10,"suggestions":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"92","severity":1,"message":"93","line":39,"column":27,"nodeType":"94","messageId":"95","endLine":39,"endColumn":29},{"ruleId":"81","severity":1,"message":"88","line":7,"column":5,"nodeType":"83","messageId":"84","endLine":7,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":27,"column":8,"nodeType":"103","endLine":27,"endColumn":10,"suggestions":"109"},{"ruleId":"92","severity":1,"message":"96","line":9,"column":48,"nodeType":"94","messageId":"95","endLine":9,"endColumn":50},{"ruleId":"92","severity":1,"message":"96","line":10,"column":55,"nodeType":"94","messageId":"95","endLine":10,"endColumn":57},{"ruleId":"92","severity":1,"message":"96","line":13,"column":48,"nodeType":"94","messageId":"95","endLine":13,"endColumn":50},{"ruleId":"92","severity":1,"message":"96","line":14,"column":50,"nodeType":"94","messageId":"95","endLine":14,"endColumn":52},{"ruleId":"92","severity":1,"message":"93","line":12,"column":29,"nodeType":"94","messageId":"95","endLine":12,"endColumn":31},{"ruleId":"92","severity":1,"message":"93","line":17,"column":33,"nodeType":"94","messageId":"95","endLine":17,"endColumn":35},{"ruleId":"92","severity":1,"message":"96","line":21,"column":41,"nodeType":"94","messageId":"95","endLine":21,"endColumn":43},{"ruleId":"101","severity":1,"message":"110","line":52,"column":8,"nodeType":"103","endLine":52,"endColumn":10,"suggestions":"111"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Link' is defined but never used.","'getLocations' is defined but never used.","'CanvasJS' is assigned a value but never used.","'CanvasJSChart' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"112","text":"113"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location' and 'props.dataType'. Either include them or remove the dependency array.","ArrayExpression",["114"],"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["117"],"React Hook useEffect has missing dependencies: 'props.dataType', 'props.location', and 'props.units'. Either include them or remove the dependency array. If 'setValue' needs the current value of 'props.location', you can also switch to useReducer instead of useState and read 'props.location' in the reducer.",["118"],[-1,0],"",{"desc":"119","fix":"120"},"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [location, props.dataType]",{"range":"124","text":"125"},{"range":"126","text":"125"},"Update the dependencies array to be: [props.dataType, props.location, props.units]",{"range":"127","text":"128"},[2836,2838],"[location, props.dataType]",[906,908],[1670,1672],"[props.dataType, props.location, props.units]"]